% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/woebin.R
\name{woebin}
\alias{woebin}
\title{woe binning}
\usage{
woebin(dt, y, x = NA, breaks_list = NA, min_perc_total = 0.02,
  stop_limit = 0.1, method = "tree", positive = "bad|1",
  print_step = FALSE)
}
\arguments{
\item{dt}{Name of input data}

\item{y}{Name of y variable.}

\item{x}{Name vector of x variables, defaults NA.}

\item{breaks_list}{list of break points, defaults NA.}

\item{min_perc_total}{The share of initial binning class number over total. Accepted range: 0.01-0.2; default: 0.02.}

\item{stop_limit}{Stop binning segmentation when information value gain ratio less than the stop_limit. Accepted range: 0-0.5; default: 0.1.}

\item{positive}{Name of positive class, defaults: bad or 1.}
}
\value{
List of binnig for each variable.
}
\description{
This function generates a list of binnings based on tree-like segmentation for both numeric and character variables.
}
\examples{
# Load German credit data
data(germancredit)
dt <- germancredit[, c('creditability', 'credit.amount', 'age.in.years', 'present.employment.since')]

# woe binning
wb <- woebin(dt, y = "creditability")
wb$bins
wb$iv

# set stop_limit (infovalue grain ratio) for each x variable
woebin(dt, y = "creditability", stop_limit = c(0.05, 0.1, 0.01))

# binning adjust based on the optimal woe binning solution
breaks_adj <- list(
credit.amount = c(600, 1400, 1800, 4000, 11000),
age.in.years = c(25, 35, 40, 60),
present.employment.since = NULL
)

wb_adj <- woebin(dt, y = "creditability", breaks_list = breaks_adj)
wb_adj$bins
wb_adj$iv

}
