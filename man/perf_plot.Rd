% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/perf.R
\name{perf_plot}
\alias{perf_plot}
\title{ks value and ks curve}
\usage{
perf_plot(label, pred, groupnum = 20, type = c("ks", "roc"), plot = TRUE,
  seed = 186)
}
\arguments{
\item{label}{label values, such as 0s and 1s.}

\item{pred}{predicted probability values.}

\item{groupnum}{the number of group numbers, default: 20.}

\item{type}{performance plot types: "ks","lift","roc","pr". Default: c("ks").}

\item{plot}{logical value, default: TRUE.}

\item{seed}{seed value for random sort data frame, defalut: 186.}
}
\value{
ks value and ks curve.
}
\description{
This function calculate kolmogorov-smirnow(ks) value and plot ks curve based on provided label and predicted probability values.
}
\examples{
# # load germancredit data
# data("germancredit")
# xynames <- names(germancredit)
# # data.table
# set.seed(1255)
# dt <- setnames(
#   data.table(germancredit)[sample(nrow(germancredit))],
#   c(paste0("x",1:20), "y")
# )[, y:=ifelse(y=="bad", 1, 0)]
#
# # woe binning
# bins <- woebin(dt, "y", stop_limit = 0.05)
# dt_woe <- woebin_ply(dt, bins, "y")
#
# # Breaking Data into Training and Test Sample
# set.seed(345)
# d <- sample(nrow(dt), nrow(dt)*0.6)
# train <- dt_woe[d]; test <- dt_woe[-d];
#
# # Traditional Credit Scoring Using Logistic Regression
# # model I
# m1 <- glm(y~., family=binomial(), data=train)
# # summary(m1)
# # Select a formula-based model by AIC
# step(m1, direction="both")
# # model II
# m2 <- glm(formula = y ~
#         x20_woe + x18_woe + x14_woe + x13_woe + x10_woe + x9_woe +
#         x8_woe + x6_woe + x5_woe + x4_woe + x3_woe + x2_woe + x1_woe,
#       family = binomial(), data = train)
# # summary(m2)
#
# # score test data set
# train$score <- predict(m2, type='response', train)
# test$score <- predict(m2, type='response', test)
#
# # performace plot
# perf_plot(train$y, train$score)
# perf_plot(test$y, test$score)

}
